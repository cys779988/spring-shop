<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cartMapper">
	<!-- 장바구니 삽입 -->
	<insert id="addCart" parameterType="com.spring.shop.cart.service.CartVO">
		INSERT INTO TBL_CART (
		CARTNUM, 
		USERID, 
		ITEMNUM, 
		CARTSTOCK
		)
		VALUES (
		cart_seq.nextval, 
		#{userId}, 
		#{itemNum}, 
		#{cartStock}
		)
	</insert>

	<!-- 장바구니 목록 -->
	<select id="cartList" resultType="com.spring.shop.cart.service.CartVO">
        SELECT 
		ROW_NUMBER() OVER(ORDER BY C.CARTNUM DESC) AS num,
		C.CARTNUM, 
		C.USERID, 
		C.ITEMNUM, 
		C.CARTSTOCK,
		C.REGDATE,
		G.INGNAME, 
		G.INGPRICE, 
		G.INGTHUMBIMG,
		R.RECIPENAME,
        R.RECIPEPRICE,
        R.RECIPETHUMBIMG
		FROM TBL_CART C
		LEFT JOIN TBL_INGREDIENT G ON C.ITEMNUM = G.INGNUM
		LEFT JOIN TBL_RECIPE     R ON C.ITEMNUM = R.RECIPENUM
		WHERE C.USERID = #{userId}
	</select>

	<!-- 카트 삭제 -->
	<delete id="deleteCart">
		DELETE TBL_CART
		WHERE CARTNUM = #{cartNum}
		AND USERID = #{userId}
	</delete>

	<!-- 주문 정보 -->
	<insert id="orderInfo">
		INSERT INTO TBL_ORDER(
		ORDERID, 
		USERID, 
		ORDERREC, 
		ZIP,
		ADDR1,
		ADDR2, 
		ORDERPHONE, 
		AMOUNT)
		VALUES(
		#{orderId}, 
		#{userId},
		#{orderRec}, 
		#{zip}, 
		#{addr1}, 
		#{addr2},
		#{orderPhone}, 
		#{amount}
		)
	</insert>

	<!-- 주문 상세 정보 -->
	<insert id="orderInfo_Details">
		INSERT INTO TBL_ORDER_DETAILS(
		ORDERDETAILSNUM,
		ORDERID, 
		ITEMNUM, 
		CARTSTOCK
		)
		SELECT 
		tbl_order_details_seq.nextval,
		#{orderId}, 
		ITEMNUM, 
		CARTSTOCK
		FROM TBL_CART
	</insert>

	<!-- 장바구니 비우기 -->
	<delete id="cartAllDelete">
		DELETE TBL_CART
		WHERE USERID = #{userId}
	</delete>

	<!-- 관리자 특정 유저의 주문 목록 -->
	<select id="orderList" resultType="com.spring.shop.cart.service.OrderVO">
		SELECT
		ORDERID, 
		USERID,
		ORDERREC, 
		ZIP, 
		ADDR1, 
		ADDR2, 
		ORDERPHONE, 
		AMOUNT,
		ORDERDATE, 
		DELIVERY
		FROM TBL_ORDER
		WHERE USERID = #{userId}
	</select>

	<!-- 관리자 특정 주문 목록 -->
	<select id="orderView" resultType="com.spring.shop.cart.service.OrderVO">
		SELECT
		O.ORDERID, 
		O.USERID,
		O.ORDERREC, 
		O.ZIP, 
		O.ADDR1, 
		O.ADDR2,
		O.ORDERPHONE, 
		O.AMOUNT,
		O.ORDERDATE, 
		O.DELIVERY,
		D.ORDERDETAILSNUM, 
		D.ITEMNUM, 
		D.CARTSTOCK,
		G.INGNAME,
		G.INGTHUMBIMG, 
		G.INGPRICE,
		R.RECIPENAME,
        R.RECIPETHUMBIMG,
        R.RECIPEPRICE
		FROM TBL_ORDER O
		INNER JOIN TBL_ORDER_DETAILS D ON O.ORDERID = D.ORDERID
		LEFT JOIN TBL_INGREDIENT G ON D.ITEMNUM = G.INGNUM
		LEFT JOIN TBL_RECIPE R ON D.ITEMNUM = R.RECIPENUM
		WHERE O.ORDERID = #{orderId}
	</select>


	<!-- 모든 유저의 주문 목록 -->
	<select id="adminOrderList" resultType="com.spring.shop.cart.service.OrderVO">
		SELECT
		ORDERID, 
		USERID,
		ORDERREC,
		ZIP, 
		ADDR1, 
		ADDR2,
		ORDERPHONE, 
		AMOUNT, 
		ORDERDATE, 
		DELIVERY
		FROM TBL_ORDER
	</select>

	<!-- 특정 주문 목록 -->
	<select id="adminOrderView" resultType="com.spring.shop.cart.service.OrderVO">
		SELECT
		O.ORDERID, 
		O.USERID, 
		O.ORDERREC,
		O.ZIP,
		O.ADDR1,
		O.ADDR2,
		O.ORDERPHONE,
		O.AMOUNT,
		O.ORDERDATE,
		O.DELIVERY,
		D.ORDERDETAILSNUM,
		D.ITEMNUM,
		D.CARTSTOCK,
		G.INGNAME,
		G.INGTHUMBIMG,
		G.INGPRICE
		FROM TBL_ORDER O
		INNER JOIN TBL_ORDER_DETAILS D ON O.ORDERID = D.ORDERID
		INNER JOIN TBL_INGREDIENT G ON D.ITEMNUM = G.INGNUM
		WHERE O.ORDERID = #{orderId}
	</select>

	<!-- 배송 상태 -->
	<update id="delivery">
		UPDATE TBL_ORDER
		SET DELIVERY = #{delivery}
		WHERE
		ORDERID = #{orderId}

	</update>

	<!-- 상품 수량 조절 -->
	<update id="changeStock">
		UPDATE TBL_INGREDIENT
		SET INGSTOCK = INGSTOCK - #{ingStock}
		WHERE INGNUM = #{ingNum}
	</update> 
	
	<!-- 상품 수량 조절 보조-->
	<select id="changeStock_sub"
		resultType="com.spring.shop.cart.service.OrderDetailVO">
		SELECT
		ORDERID, 
		ITEMNUM, 
		CARTSTOCK 
		FROM TBL_ORDER_DETAILS 
		WHERE ORDERID = #{orderId}
	</select>
</mapper>